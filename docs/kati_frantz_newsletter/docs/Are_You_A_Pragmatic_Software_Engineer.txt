![pragmatic-engineer-definition](https://mailcoach.mailcoach.de-fra1.upcloudobjects.com/8aba450d-80f3-4a9e-ad63-c591a99e4788/6802/conversions/slide-1-2-image.png)Hello ,I had a nice chat with a software engineer on Twitter. We'll call him Tolu.He took my advice and reached out to a business.This small business needed an ecommerce website to sell food online.This was a great way for Tolu to provide real business value using his skills.So Tolu started building the website using React, NodeJS and MongoDB. Everything was going well, and he had been coding for over 2 months now.It was almost ready. But here's the problem.2 months to write the entire code for an ecommerce shop ?While I was very happy with Tolu's work, I had to tell him he was not pragmatic enough.Let's break it down. There are endless ways of building an ecommerce store today. Here are some options:1. **Write the entire code from scratch using your preferred programming languages and framework**. In this option, you as the developer have to write the entire code, figure out the design, and will maintain the project for as long as needed. You will also have to monitor, backup and manage the database, pay for servers, and manage the frontend deployment. This is the option Tolu chose.2. **Create a frontend only, and use a headless CMS to manage inventory, such as Commerce Layer**. In this option, you pay a monthly fee to a service to handle the backend, while you handle the frontend and consume the data.3. **Paystack commerce**. In this option, you do absolutely zero work, and can have a shop ready in 10 to 30 minutes.Which of these 3 options will you choose ?Option 3, obviously, right ?But here's the thing. I asked **10 developers** how they would solve this customer's problem, and **7 of them described Option 1**. Even though they mentioned ways to build faster and take maybe 2 weeks to complete, they still chose Option 1.This is not the way of the pragmatic software engineer.> The pragmatic software engineer is a customer problem solver. A customer will 100% choose a free option that can be done in 10 to 30 minutes over a long paid option that might take months and will require months of bug fixes and maintenance after that.![cost effective solutions](https://mailcoach.mailcoach.de-fra1.upcloudobjects.com/8aba450d-80f3-4a9e-ad63-c591a99e4788/6808/conversions/slide-1-3-image.png)Being a pragmatic engineer is the best thing you can do for any business.Businesses want engineers who can solve their problems in the fastest and cost effective way possible.Here are the 2 best ways to become a pragmatic software engineer:1/2 Learn the WHY behind technologies-------------------------------------Can you efficiently choose between using Angular or React or Vue for your next project, without allowing your personal feelings get in the way ?Can you make that business decision ? The only way to make the correct decision is to study the technologies, the market you're in, and the current talent pool of the business.And this applies to everything. Choosing the right programming language, the right database, the right services to build or the ones to pay for.You can only make strategic technology decisions if you have a vast understanding of what problems the technologies solve and how they solve these problems.2/2 Learn the business problems inside out------------------------------------------Businesses vary in size, revenue, and problems. Building solutions for a multi million dollar company is way different than building a solution for an idea stage startup.**Example**: Building an ecommerce store from scratch might make sense for a large corporation business because they can afford it, and will pay designers to design something that matches their brand exactly.For a small business owner, using a free tool that allows the business owner get paid instantly is the best way to go.Study the problems the business is trying to solve immensely, and find a solution that solves that problem in the most cost effective way.![pragmatic engineer builds solutions to customer needs](https://mailcoach.mailcoach.de-fra1.upcloudobjects.com/8aba450d-80f3-4a9e-ad63-c591a99e4788/6809/conversions/slide-1-image.png)---In conclusion, learn how to make business decisions. The secret is studying varying technologies and learning what problems they solve.This will strengthen your ability to contribute a lot more value by making the right technology decisions for a business, project or team.[Online version](https://frantz.mailcoach.app/webview/campaign/c764141a-2656-4890-8749-7c4e60b30e94) â€¢ [Unsubscribe](https://frantz.mailcoach.app/unsubscribe/fbba01de-5bd1-468f-a377-3337dae3438e/5d593eea-ccdf-4ef6-a1a3-46c7a203d687) Sent by [Frantz Kati](https://twitter.com/bahdcoder?utm_source=newsletter&utm_medium=email&utm_campaign=are-you-a-pragmatic-software-engineer)